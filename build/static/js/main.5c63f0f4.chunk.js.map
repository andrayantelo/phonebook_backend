{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","newFilter","onChange","handleChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","renderPeople","filterPeople","persons","Notification","message","messageClass","className","baseUrl","axios","get","then","response","data","newObj","post","id","put","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setMessageClass","notify","msgClass","setTimeout","useEffect","personsService","personsData","catch","error","clearForm","filter","person","name","includes","event","target","preventDefault","length","personObj","number","updatedPerson","p","concat","updateNumber","getPerson","newPerson","arr","map","key","onClick","window","confirm","handleDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c63f0f4.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with\n            <input\n              value={ props.newFilter }\n              onChange={ props.handleChange }\n            />\n        </div>\n    )\n}\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n            <form onSubmit={props.addPerson}>\n                <div>\n                name: \n                    <input\n                        value={ props.newName }\n                        onChange={ props.handleNameChange }\n                    />\n                </div>\n                <div>number:\n                    <input\n                        value= { props.newNumber }\n                        onChange={ props.handleNumberChange }\n                    />\n                </div>\n                <div>\n                <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({ newFilter, renderPeople, filterPeople, persons}) => {\n    return (\n        <div>\n            {newFilter ?  renderPeople(filterPeople) : renderPeople(persons)}\n        </div>\n    )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ( {message, messageClass }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className={messageClass}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst getPerson = (id) => {\n    const request = axios.get(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst create = (newObj) => {\n    const request = axios.post(baseUrl, newObj)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObj) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    getPerson,\n    create,\n    update,\n    deletePerson\n}\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personsService from './services/persons';\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ newFilter, setNewFilter ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageClass, setMessageClass ] = useState('error');\n\n\n    const notify = (message, msgClass) => {\n        setMessage(message);\n        setMessageClass(msgClass);\n        setTimeout(() => setMessage(null), 5000);\n    }\n\n    useEffect(() => {\n        personsService.getAll()\n        .then(personsData => setPersons(personsData))\n        .catch(error => {\n            notify(`Could not get persons data. ${error}`, 'error')\n        });\n    }, [])\n\n    const existing = (name) => {\n        // returns true if person with name 'name' already in persons\n        const person = persons.filter(person => person.name === name);\n        return (person.length === 1);\n    }\n\n    const getPerson = (name) => {\n        return persons.filter(person => person.name === name)[0];\n    }\n\n    const clearForm = () => {\n        setNewName('');\n        setNewNumber('');\n    }\n\n    const updateNumber = (person) => {\n        const personObj = {\n            ...person,\n            number: newNumber\n        }\n        personsService.update(person.id, personObj)\n            .then(updatedPerson => {\n                setPersons(persons.filter(p => p.id !== person.id).concat(updatedPerson));\n                clearForm();\n                notify(`Successfully updated ${person.name}'s phone number`, 'success');\n            })\n            .catch(error => {\n                notify(`Could not update ${person.name}'s data. ${error}`, 'error');\n            });\n    }\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        if (existing(newName)) {\n            updateNumber(getPerson(newName))\n        }\n        else {\n            const personObj = {\n                name: newName,\n                number: newNumber\n            }\n            personsService.create(personObj)\n                .then(newPerson => {\n                setPersons(persons.concat(newPerson));\n                clearForm();\n                notify(`Added ${newName}`, 'success')\n            })\n            .catch(error => {\n                notify(`${newName} is already in phonebook. ${error}`, 'error');\n            })\n        }\n    }\n  \n    const handleDelete = (person) => {\n        if (window.confirm(`Delete ${person.name}?`)) {\n            personsService.deletePerson(person.id)\n                .then(response => {\n                    setPersons(persons.filter(person => person.id !== response.id));\n                })\n                .catch(error => {\n                    notify(`Could not delete ${person.name}. ${error}`, 'error');\n                });  \n        }\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n  \n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value);\n    }\n\n    const filterPeople = persons.filter((person) => {\n        return person.name.includes(newFilter);\n    })\n\n    const renderPeople = (arr) => {\n    return arr.map((person) => {\n        return (\n            <div key={person.id}>\n                {person.name} {person.number}\n                <button onClick={() => handleDelete(person)} value={person.id}>delete</button>\n            </div>\n        )\n        });\n    } \n    return (\n    <div>\n        <Notification message={message} messageClass={messageClass} />\n        <h2>Phonebook</h2>\n            <Filter handleChange={handleFilterChange} newFilter={newFilter} />\n        <h2>Add a new</h2>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n            />\n        <h2>Numbers</h2>\n            <Persons\n                newFilter={newFilter}\n                renderPeople={renderPeople}\n                filterPeople={filterPeople}\n                persons={persons}\n            />\n    </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}